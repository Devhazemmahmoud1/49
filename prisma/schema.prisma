// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost:3306/fourtynine?schema=public"
}

model Users {
  id            Int             @id @default(autoincrement())
  firstName     String          @db.VarChar(255)
  lastName      String          @db.VarChar(255)
  email         String          @db.VarChar(5000)
  gender        Int             @default(1)
  phone         String          @db.VarChar(255)
  password      String          @db.VarChar(255)
  is_locked     Int             @default(0)
  ref_number    String          @db.VarChar(255)
  country       String?
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  Wallet        Wallet?
  subscriptions subscriptions[]
}

model Blocked_users {
  id         Int      @id @default(autoincrement())
  phone      String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model MainCategories {
  id            Int                       @id @default(autoincrement())
  name_en       String                    @db.VarChar(5000)
  name_ar       String                    @db.VarChar(5000)
  is_hidden     Int                       @default(0)
  created_at    DateTime                  @default(now())
  updated_at    DateTime                  @updatedAt
  subCategories SubCategories[]
  photo         MainCategoryAttachments[]
}

model SubCategories {
  id              Int                      @id @default(autoincrement())
  name_en         String                   @db.VarChar(5000)
  name_ar         String                   @db.VarChar(5000)
  is_hidden       Int                      @default(0)
  parent          Int
  paymentFactor   Int                      @default(0)
  portion         Int                      @default(0)
  providerPortion Int                      @default(0)
  dailyPrice      Int                      @default(0)
  grossMoney      String?                  @db.VarChar(191)
  created_at      DateTime                 @default(now())
  updated_at      DateTime                 @updatedAt
  Categories      MainCategories           @relation(fields: [parent], references: [id])
  photo           SubCategoryAttachments[]
}

model MainCategoryAttachments {
  id          Int            @id @default(autoincrement())
  category_id Int
  url         String         @db.VarChar(5000)
  created_at  DateTime       @default(now())
  updated_at  DateTime       @updatedAt
  MainPhoto   MainCategories @relation(fields: [category_id], references: [id])
}

model SubCategoryAttachments {
  id          Int           @id @default(autoincrement())
  category_id Int
  url         String        @db.VarChar(5000)
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  SubPhoto    SubCategories @relation(fields: [category_id], references: [id])
}

model Wallet {
  id               Int              @id @default(autoincrement())
  user_id          Int              @unique
  balance          String
  startBalance     String
  balanceAfter5    String
  grossMoney       String
  generatedBal     String
  profit           String
  total            String
  FiveYears        String
  TenYears         String
  providerCashBack String?
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  user             Users            @relation(fields: [user_id], references: [id])
  Activity         WalletActivity[]
}

model WalletActivity {
  id           Int      @id @default(autoincrement())
  wallet_id    Int
  activityType Int      @db.Int
  activityText String   @db.VarChar(5000)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  Wallet       Wallet   @relation(fields: [wallet_id], references: [id])
}

model Payment {
  id            Int            @id @default(autoincrement())
  user_id       Int
  paymentIn     String
  paymentOut    String
  transNum      String
  paymentMethod Int
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  payment       paymentMethods @relation(fields: [paymentMethod], references: [id])
}

model subscriptions {
  id         Int      @id @default(autoincrement())
  user_id    Int
  period     String   @db.VarChar(5000)
  isPermium  Int      @default(0)
  user       Users    @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model paymentMethods {
  id                Int       @id @default(autoincrement())
  name              String
  gatewayConstant   String
  gatewayPercentage String
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  payment           Payment[]
}

model GovFees {
  id         Int      @id @default(autoincrement())
  VAT        String
  Tax        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model cashBackRules {
  id               Int      @id @default(autoincrement())
  step             Int //
  requestPortion   String //
  callPortion      String // 
  likePortion      String //
  viewPortion      String //
  sharePortion     String //
  anyPortion       String //  
  xFactor          String?
  overHeadPortion  String?
  overHeadConstant String?
  totalGovCut      String?
  virtualMoney     String? // amount + wallet 
  transNum         String?
  overHeadFactor   String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model cashBackStorage {
  id               Int      @id @default(autoincrement())
  fees             Int      @default(0)
  fourtyNineGain   String
  providerCashBack String //
  requestCashBack  String
  callCashBack     String
  likeCashBack     String
  viewCashBack     String
  shareCashBack    String
  anyCashBack      String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model RunningCost {
  id         Int      @id @default(autoincrement())
  amount     String
  reason     String   @db.LongText
  paymentOut String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model PaymentGateWayFees {
  id            Int      @id @default(autoincrement())
  paymentMethod String
  totalFees     Float?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model PayoutRequests {
  id            Int      @id @default(autoincrement())
  user_id       Int
  amount        String
  is_withdrawin Int      @default(0)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model AppInfo {
  id Int @id @default(autoincrement())
  intrest Float 
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Profit {
  id               Int      @id @default(autoincrement())
  user_id          Int
  startBalance     Float?   @default(0)
  generatedBalance Float?   @default(0)
  intest           Int      @default(0)
  profit           Float?   @default(0) 
  total            Float?   @default(0)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}
